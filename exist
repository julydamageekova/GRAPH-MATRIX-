#include <iostream>

using namespace std;

bool exist(int s, int t, bool** G, bool* used, int V){
    used[s] = 1;
    bool h;
    for(int i = 0; i < V; i++){
        if(G[t][i] == 1){
            return true;
        }
        else
            if((used[i] == 0)&&(G[s][i] == 1))
                exist(i, t, G, used, V);
                return false;
    }
}

void matrix (int V, int E, bool** G){
    for ( int i = 0; i < V; i++)
        for ( int j = 0; j < V; j++)
            G[i][j] = false;
    cout << " Enter edges :"<< endl;
    int k,l;
    for (int i = 0; i < E; i++){
        cout << " ";
        cin >> k >> l;
        G[k][l] = true;
        G[l][k] = true;
    }
     for ( int i = 0; i < V; i++){
        for ( int j = 0; j < V; j++){
            cout << G[i][j]<< " ";
        }
        cout << endl;
     }
}

int main()
{
    int V, E;
    cout << " Enter amount of vertexes ";
    cin >> V;
    cout << " Enter amount of edges ( <= V!) ";
    cin >> E;
    bool** G = new bool* [V];
    for(int i = 0; i < V; i++)
        G[i]=new bool [V];
    matrix(V, E, G);
    int k = 0, s, t;
    bool used[V];
    cout << " Enter 2 vertices ";
    cin >> s >> t;
    bool y = exist(s, t, G, used, V);
    if (y)
        cout << " Exist ";
    else
        cout << " Doesn't exist ";
    return 0;
}
